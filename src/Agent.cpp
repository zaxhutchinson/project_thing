#include"Agent.hpp"


Agent::Agent() {

}
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
void Agent::Build() {

}
void Agent::AddMind(sptr<Mind> mind) {
    this->mind = mind;
}
void Agent::AddEye(sptr<ExInput> ex_input) {
    eyes.push_back(ex_input);
}
void Agent::AddEar(sptr<ExInput> ex_input) {
    ears.push_back(ex_input);
}
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
int Agent::GetX() { return x; }
int Agent::GetY() { return y; }
void Agent::SetX(int x) { this->x = x; }
void Agent::SetY(int y) { this->y = y; }
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
void Agent::VisualInput(sptr<Thing> thing) {
    int num_details = thing->details.size();

    for(int i = 0; i < num_details; i++) {
        eyes[i]->Strength(thing->details[i]);
    }
}
void Agent::AuralInput(sptr<Sound> sound) {
    int num_details = sound->details.size();
    for(int i = 0; i < num_details; i++) {
        ears[i]->Strength(sound->details[i]);
    }
}
